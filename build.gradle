buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}
}

plugins {
	id 'application'
	id 'uk.gov.hmcts.java' version '0.12.12'
	id 'jacoco'
	id 'pmd'
	id 'com.github.ben-manes.versions' version '0.38.0'//do not change this
	id "info.solidsoft.pitest" version '1.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.sonarqube' version '3.3'
	id 'org.springframework.boot' version '2.4.12'
	id "org.flywaydb.flyway" version '8.5.2'
	id 'au.com.dius.pact' version '4.1.7' //do not change, otherwise serenity report fails
}

apply plugin: 'java'
apply plugin: 'project-report'
apply plugin: 'idea'

def versions = [
		junit              : '5.8.1',
		junitPlatform      : '1.8.1',
		lombok             : '1.18.22',
		pitest             : '1.7.3',
		reformLogging      : '5.1.9',
		reformS2sClient    : '4.0.0',
		springBoot         : '2.4.12',
		springHystrix      : '2.2.8.RELEASE',
		springfoxSwagger   : '2.9.2',
		pact_version       : '3.5.24',
		rest_assured       : '4.2.1',
		log4j              : '2.17.1',
		springVersion      : '5.3.20'
]

mainClassName = 'uk.gov.hmcts.reform.profilesync.ProfileSyncApplication'
def jarName = 'rd-profile-sync.jar'

group = 'uk.gov.hmcts.reform.profilesync'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
		}
	}
}

tasks.withType(Test) {
	useJUnitPlatform()

	testLogging {
		exceptionFormat = 'full'
	}
}

compileJava {
	options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
	options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(JavaExec).configureEach {
	javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

sourceSets {

	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integrationTest/java')
		}
		resources.srcDir file('src/integrationTest/resources')
	}

	functionalTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/functionalTest/java')
		}
		resources.srcDir file('src/functionalTest/resources')
	}

	smokeTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/smokeTest/java')
		}
		resources.srcDir file('src/smokeTest/resources')
	}

	contractTest {
		java {
			compileClasspath += main.output
			runtimeClasspath += main.output
			srcDir file('src/contractTest/java')
		}
		resources.srcDir file('src/contractTest/resources')
	}
	pactTest {
		java {
			compileClasspath += main.output
			runtimeClasspath += main.output
			srcDir file('src/pactTest/java')
		}
		resources.srcDir file('src/pactTest/resources')
	}
}

idea {
	module {
		testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
		testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
		testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
		testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
		testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
		testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
	}
}


configurations {
	integrationTestImplementation.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
	functionalTestImplementation.extendsFrom testCompile
	functionalTestRuntime.extendsFrom testRuntime
	contractTestImplementation.extendsFrom testCompile
	contractTestRuntimeOnly.extendsFrom testRuntime
	pactTestImplementation.extendsFrom testCompile
	pactTestRuntime.extendsFrom testRuntime

}

check.dependsOn jacocoTestCoverageVerification

pmd {
	toolVersion = "6.12.0"
	ignoreFailures = true
	sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.functionalTest, sourceSets.smokeTest]
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSets = [
			'category/java/errorprone.xml',
			'category/java/bestpractices.xml'
	]
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

	systemProperty "scenario", System.getProperty('scenario')

	testClassesDirs = sourceSets.functionalTest.output.classesDirs
	classpath = sourceSets.functionalTest.runtimeClasspath
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
	testClassesDirs = sourceSets.smokeTest.output.classesDirs
	classpath = sourceSets.smokeTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
	baselineOnMigrate = true
	if (project.hasProperty("dburl")) {
		url = "jdbc:postgresql://${dburl}"
	}
}

task contract(type: Test) {
	description = 'Runs the consumer Pact tests'
	useJUnitPlatform()
	testClassesDirs = sourceSets.contractTest.output.classesDirs
	classpath = sourceSets.contractTest.runtimeClasspath
	include "uk/gov/hmcts/reform/profilesync/**"
	systemProperty 'pact.rootDir', "pacts"
}

task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
	// Nothing to do here
	testClassesDirs = sourceSets.contractTest.output.classesDirs
	classpath = sourceSets.contractTest.runtimeClasspath
}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  //This is a temporary fix to prevent the nightly build from failing if the Fortify scan detects issues
  ignoreExitValue = true
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

pact {
	publish {
		pactDirectory = 'pacts'
		pactBrokerUrl = 'https://pact-broker.platform.hmcts.net'
		tags = ['Dev']
		version = "1.0"
	}
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	executionData(test, integration)
	reports {
		xml.required = true
		csv.required = false
		xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
	}
}

pitest {
	junit5PluginVersion = '0.15'
	targetClasses = ['uk.gov.hmcts.reform.profilesync.*']
	excludedClasses = [
			'uk.gov.hmcts.reform.profilesync.ProfileSyncApplication',
			'uk.gov.hmcts.reform.profilesync.config.*',
			'uk.gov.hmcts.reform.profilesync.client.*'
	]
	threads = 10
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
	mutationThreshold = 80
}

project.tasks['pitest'].group = "Verification"

sonarqube {
	properties {
		property "sonar.projectName", "rd-user-profile-sync-api"
		property "sonar.projectKey", "RDPROFILESYNCAPI"
		property "sonar.coverage.jacoco.xmlReportPaths",
				"${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.pitest.mode", "reuseReport"
		property "sonar.pitest.reportsDirectory", "build/reports/pitest"
		property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/profilesync/config/**," +
				"src/main/java/uk/gov/hmcts/reform/profilesync/client/**," +
				"src/main/java/uk/gov/hmcts/reform/profilesync/ProfileSyncApplication.java,"

	}
}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport, integration
project.tasks['sonarqube'].group = "Verification"



repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {

	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.2'
	implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot){
		exclude group: "org.springframework.security"
	}
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
	implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot){
		exclude group: 'org.glassfish', module: 'jakarta.el'
	}

	implementation (group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: versions.springHystrix){
		exclude group: "org.springframework.security"
	}
	implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: versions.springBoot

	implementation group: 'org.springframework', name: 'spring-core', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-beans', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-aop', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-aspects', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-context', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-context-support', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-expression', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-jcl', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-jdbc', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-orm', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-tx', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-web', version: versions.springVersion
	implementation group: 'org.springframework', name: 'spring-webmvc', version: versions.springVersion

	implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.0.5'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.0'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
	implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.13.2.20220324', ext: 'pom'
	implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
	implementation group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'



	implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '3.0.2'

	implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

	implementation "com.github.hmcts.java-logging:logging:${versions.reformLogging}"
	implementation "com.github.hmcts.java-logging:logging-appinsights:${versions.reformLogging}"
	implementation ('com.github.hmcts:properties-volume-spring-boot-starter:0.1.1'){
		exclude group: "org.springframework.security"
		exclude group: 'org.glassfish', module: 'jakarta.el'
	}
	implementation ('com.github.hmcts:service-auth-provider-java-client:4.0.3'){
		exclude group: "org.springframework.security"
	}

	implementation group: "com.google.code.gson", name: "gson", version: "2.9.0"

	implementation ('com.github.hmcts:idam-java-client:2.0.1'){
		exclude group: "org.springframework.security"
	}
	implementation "io.github.openfeign:feign-httpclient:11.8"
	implementation ('org.springframework.boot:spring-boot-starter-validation'){
		exclude group: 'org.glassfish', module: 'jakarta.el'
	}
	//Fix for CVE-2021-29425
	implementation 'commons-io:commons-io:2.11.0'
	implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.2.3'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

	implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
	
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
  	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
  	implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
  	implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j

	implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.11'
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10'

	compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
	smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

	testImplementation("org.hamcrest:hamcrest-junit:2.0.0.0") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
		exclude group: "org.hamcrest", module: "hamcrest-library"
	}

	testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
	testImplementation group: 'io.rest-assured', name: 'json-path', version: versions.rest_assured
	testImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.rest_assured
	testImplementation group: 'io.rest-assured', name: 'rest-assured-common', version: versions.rest_assured

	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
	testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
	testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

	testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.3.1'
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.6.28'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.6.1'
	testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

	testImplementation group: 'com.h2database', name: 'h2'
	testImplementation('com.github.tomakehurst:wiremock:2.33.2') {
		exclude group: 'com.github.jknack'
	}
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot, {
		exclude group: 'junit', module: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
	testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.4'
	testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
	testImplementation group: 'org.pitest', name: 'pitest-junit5-plugin', version: '0.15'
	
	testImplementation group: 'org.yaml', name: 'snakeyaml', version: '1.29'
	testImplementation 'com.github.hmcts:fortify-client:1.2.0:all'

	integrationTestImplementation group: 'org.yaml', name: 'snakeyaml', version: '1.27'

	functionalTestImplementation(group: 'org.yaml', name: 'snakeyaml') {
		version{
		    strictly '1.23'
		}
	}

	smokeTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
	smokeTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
	smokeTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
	smokeTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
	smokeTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

	integrationTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
	integrationTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
	integrationTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
	integrationTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
	integrationTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

	contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
	contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
	contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
	contractTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
	contractTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform
	contractTestImplementation('org.scala-lang:scala-library:2.13.8')

	contractTestImplementation(group: 'au.com.dius', name:'pact-jvm-consumer-junit5_2.12', version: versions.pact_version) {
		version{
        		    strictly versions.pact_version
        		}
	}

	integrationTestImplementation sourceSets.main.runtimeClasspath
	integrationTestImplementation sourceSets.test.runtimeClasspath

	functionalTestImplementation sourceSets.main.runtimeClasspath
	functionalTestImplementation sourceSets.test.runtimeClasspath

	smokeTestImplementation sourceSets.main.runtimeClasspath
	smokeTestImplementation sourceSets.test.runtimeClasspath

	contractTestImplementation sourceSets.main.runtimeClasspath
	contractTestImplementation sourceSets.test.runtimeClasspath

	pactTestImplementation sourceSets.main.runtimeClasspath
	pactTestImplementation sourceSets.test.runtimeClasspath
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
	suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyManagement {

	dependencies {
		// CVE-2021-33037
		// CVE-2021-42340
		dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.63') {
			entry 'tomcat-embed-core'
			entry 'tomcat-embed-el'
			entry 'tomcat-embed-websocket'
		}
	}
}
dependencyUpdates.resolutionStrategy = {
	componentSelection { rules ->
		rules.all { ComponentSelection selection ->
			boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
				selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
			}
			if (rejected) {
				selection.reject('Release candidate')
			}
		}
	}
}

gradle.startParameter.continueOnFailure = true

bootJar {
	archiveFileName = jarName
	manifest {
		attributes('Implementation-Version': project.version.toString())
	}
}



// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed appllications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]


rootProject.tasks.named("processSmokeTestResources") {
	duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
	duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
	duplicatesStrategy = 'include'
}
